name: Deploy to AWS Prod

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
        default: us-east-1
      ecr_repository_name:
        required: true
        type: string
      qa_image_name:
        required: true
        type: string
      prod_image_name:
        required: true
        type: string

permissions:
  id-token: write   # This is required by AWS for requesting the JWT
  contents: read    # This is required by AWS for actions/checkout

jobs:
  prod-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure AWS credentials for QA
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.AWS_QA_ROLE }}
      - name: Login to QA ECR
        id: login-ecr-qa
        uses: aws-actions/amazon-ecr-login@v2
      - name: Pull image from qa ECR
        id: pull-image
        env:
          REGISTRY: ${{ steps.login-ecr-qa.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr_repository_name }}
          QA_IMAGE_NAME: ${{ inputs.qa_image_name }}
          PROD_IMAGE_NAME: ${{ inputs.prod_image_name }}
        run: |
          docker pull $REGISTRY/$REPOSITORY:$QA_IMAGE_NAME
          docker tag $REGISTRY/$REPOSITORY:$QA_IMAGE_NAME $REPOSITORY:$PROD_IMAGE_NAME

      - name: Configure AWS credentials for prod
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.AWS_PROD_ROLE }}
      - name: Login to prod ECR
        id: login-ecr-prod
        uses: aws-actions/amazon-ecr-login@v2
      - name: Push image to prod ECR
        id: push-image
        env:
          REGISTRY: ${{ steps.login-ecr-prod.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr_repository_name }}
          PROD_IMAGE_NAME: ${{ inputs.prod_image_name }}
        run: |
          docker tag $REPOSITORY:$PROD_IMAGE_NAME $REGISTRY/$REPOSITORY:$PROD_IMAGE_NAME
          docker push $REGISTRY/$REPOSITORY:$PROD_IMAGE_NAME
